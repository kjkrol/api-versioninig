apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

group = 'kjkrol'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile('org.springframework:spring-webmvc:5.0.0.RELEASE')
    testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
    integrationTestCompile('org.springframework.boot:spring-boot-starter-test:2.0.0.M5')
    integrationTestCompile('org.springframework.boot:spring-boot-starter-web:2.0.0.M5')
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/test-integration/groovy')
        java.srcDir file('src/test-integration/java')
        resources.srcDir file('src/test-integration/resources')
        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.integrationTestCompile
        runtimeClasspath = output + compileClasspath + configurations.integrationTestRuntime
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    testLogging {
        exceptionFormat = 'full'
    }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
check.dependsOn jacocoTestReport

integrationTest {
    if (project.hasProperty("springProfilesInclude")) {
        systemProperty("spring.profiles.include", project.properties.springProfilesInclude)
    }
    if (project.hasProperty("springCloudConfigUri")) {
        systemProperty("spring.cloud.config.uri", project.properties.springCloudConfigUri)
    }
}

checkstyle {
    configFile rootProject.file('checkstyle.xml')
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
    dependsOn test
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
